name: API Testing - Rest Assured

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "00 18 * * *"   # Every day at 6 PM UTC
    - cron: "00 03 * * *"   # Every day at 3 AM UTC
    
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to run tests"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        default: staging

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [11]

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      API_KEY: ${{ secrets.API_KEY }}
      ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin
          cache: maven

      - name: Run API Tests
        run: mvn -T 2C clean test -Denv=${{ env.ENVIRONMENT }}

      - name: Upload Surefire Reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports-java-${{ matrix.java-version }}
          path: target/surefire-reports

      - name: Publish Test Report to GitHub
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: TestNG Results (Java ${{ matrix.java-version }})
          path: target/surefire-reports/junitreports/TEST-*.xml
          reporter: java-junit

      - name: Generate Test Summary
        if: always()
        id: summary
        run: |
          PASSED=$(grep -oP '(?<=Tests run: )[0-9]+' target/surefire-reports/*.txt | awk '{sum+=$1} END {print sum}')
          FAILED=$(grep -oP '(?<=Failures: )[0-9]+' target/surefire-reports/*.txt | awk '{sum+=$1} END {print sum}')
          SKIPPED=$(grep -oP '(?<=Skipped: )[0-9]+' target/surefire-reports/*.txt | awk '{sum+=$1} END {print sum}')
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV

      - name: Extract Failed Test Names
        if: always()
        run: |
          FAILED_TESTS=$(grep -oP '(?<=--- ).*(?= ---)' target/surefire-reports/*.txt | tr '\n' ',' | sed 's/,$//')
          echo "FAILED_TESTS=$FAILED_TESTS" >> $GITHUB_ENV

      - name: Send Slack Notification
        if: always()
        run: |
          STATUS="✅ All tests passed!"
          if [ "$FAILED" -gt 0 ]; then
            STATUS="❌ Some tests failed"
          fi
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"text\": \"*API Test Summary* (${ENVIRONMENT} | Java ${{ matrix.java-version }})\n$STATUS\n✅ Passed: $PASSED\n❌ Failed: $FAILED\n⚠️ Skipped: $SKIPPED\n*Failed Tests:* ${FAILED_TESTS}\nRun: <${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}|View Logs>\"
          }" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
